apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "com.adarshr.test-logger"

def googleApiKeyRelease = System.getenv("GOOGLE_API_KEY") ? System.getenv("GOOGLE_API_KEY") : GOOGLE_API_KEY
def googleApiKeyDebug = System.getenv("GOOGLE_API_KEY_DEBUG") ? System.getenv("GOOGLE_API_KEY") : GOOGLE_API_KEY
println(googleApiKeyRelease)
println(googleApiKeyDebug)

testlogger {
    //https://github.com/radarsh/gradle-test-logger-plugin
    theme 'mocha'
    slowThreshold 5000
    showPassed true
    showSkipped true
    showPassedStandardStreams true
    showSkippedStandardStreams true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "app.camp.gladiator"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", googleApiKeyRelease ?: ""

        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            resValue "string", "google_maps_key", googleApiKeyDebug ?: ""

        }
    }

    compileOptions {
        targetCompatibility = "1.8"
        sourceCompatibility = "1.8"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError true
        htmlReport true
        noLines false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                systemProperty "robolectric.logging.enabled", false
            }
        }
        testlogger {
            theme 'standard-parallel' // task level
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.jakewharton.threetenabp:threetenabp:$local_date_time_backport"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"

    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$ktx_core_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.google.android.material:material:$androidx_material_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"

    implementation "com.google.android.gms:play-services-location:$play_services_location_version"
    implementation "com.google.android.gms:play-services-maps:$play_services_maps_version"
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    implementation "androidx.navigation:navigation-runtime-ktx:$ktx_navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$ktx_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$ktx_navigation_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
    testImplementation "androidx.test:core:$androidx_test_core_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_ext_junit"
    testImplementation "androidx.test.ext:truth:$androidx_test_core_version"
    testImplementation "androidx.test:rules:$androidx_test_core_version"
    testImplementation "androidx.test:runner:$androidx_test_core_version"
    testImplementation "androidx.test:rules:$androidx_runner_version"
    testImplementation "androidx.test:runner:$androidx_runner_version"
    implementation "androidx.fragment:fragment-testing:$androidx_fragment_testing_version"
    testImplementation "androidx.test.espresso:espresso-core:$androidx_espresso"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    // used to not have to run test with robolectric
    testImplementation 'org.threeten:threetenbp:1.4.1'

    androidTestImplementation "androidx.test.ext:junit:$androidx_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso"
}
